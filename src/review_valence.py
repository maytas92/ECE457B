import json_reader
import valence_data

# constant that denotes that
# a word is not found in the
# valence data set
DOES_NOT_EXIST = 10

# This class acts as a wrapper around the
# ReviewJsonReader and the ValenceData 
# classes to score words based on the 
# valence data set.
class ReviewValence:
	def __init__(self):
		self.review_json = json_reader.ReviewJsonReader(
                 './data/yelp_academic_dataset_review.json',
                 './output/yelp_review_output.json')
		self.review_json.open_input_file()
		self.review_json.read_input_file()
		self.valence_data = valence_data.ValenceData('./data/valence.txt')
		self.valence_data.process_data()

	# Iterates through the first 'num_reviews'
	# For each review it looks up the valence
	# score for each word across all POS tags.
	def process_reviews(self, num_reviews):
		# Should return the first ten json records
		for i in range(num_reviews):
  			self.review_json.process_record()
  	# review_output is a map with the key being a POS Tag
  	# and the value an array of words falling into that 
  	# POS Tag category.
		for review_output in self.review_json.pos_tag_review_output:
			# Per review iterate through all the pos tags and associated
			# list of words
			word_with_valence_count = 0
			review_words_count = 0
			for pos_tag, words in review_output.items():
				# Check if word exists in the valence data
				for word in words:
					review_words_count += 1
					valence_score = self.get_valence_score(word)
					if valence_score != DOES_NOT_EXIST:
						word_with_valence_count += 1
			print "Percent of words found in valence dataset ", word_with_valence_count / float(review_words_count)	* 100

	# Valence scores from the data source lie between 
	# [-5, 5]. It returns the score based on the 
	# map generated by the ValenceData object.
	def get_valence_score(self, word):
		if word in self.valence_data._data_map:
			return self.valence_data._data_map[word]
		return DOES_NOT_EXIST


############### MAIN ###############
rv = ReviewValence()
rv.process_reviews(100)